// plugins
apply plugin: 'fabric-loom'
apply plugin: 'maven-publish'
apply plugin: 'com.replaymod.preprocess'
apply plugin: 'com.modrinth.minotaur'


archivesBaseName = project.archives_base_name     // in central gradle.properties

version = 'v' + project.mod_version + '-' + project.minecraft_version + '-' + new Date().format('yyMMddHHmmss')
def simple_version = 'v' + project.mod_version

group = project.maven_group


if (project.mcVersion >= 11800) {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
} else if (project.mcVersion >= 11700) {
	sourceCompatibility = JavaVersion.VERSION_16
	targetCompatibility = JavaVersion.VERSION_16
}


repositories {
    maven {
		url 'https://jitpack.io'
	}
	maven {
		url 'https://www.cursemaven.com'
	}

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}


// https://github.com/FabricMC/fabric-loader/issues/783
configurations {
	modRuntimeOnly.exclude group: 'net.fabricmc', module: 'fabric-loader'
}


dependencies {
    // loom
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // loader
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"    // in central gradle.properties

    // mods
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("curse.maven:carpet-349239:${project.carpet_core_version}")
}


processResources {
    from "opt-carpet-addition.accesswidener"

    inputs.property "version", simple_version
    inputs.property "minecraft_requirement_version", project.minecraft_requirement_version
    inputs.property "carpet_requirement_version", project.carpet_requirement_version

    filesMatching("fabric.mod.json") {
        def valueMap = [
				"version": simple_version,
				"carpet_requirement_version": project.carpet_requirement_version,
				"minecraft_requirement_version": project.minecraft_requirement_version,
		]
		expand valueMap
    }
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}


loom {
    accessWidenerPath.set(file("src/main/resources/opt-carpet-addition.accesswidener"))

    runConfigs.configureEach {
		// to make sure it generates all "Minecraft Client (:subproject_name)" applications
		ideConfigGenerated = true
		runDir '../../run'
	}
}

remapJar {
	remapperIsolation = true
}


java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}


jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}

// Publish to modrinth
modrinth {
    // Token
    token = System.getenv("MODRINTH_TOKEN")

    // Project ID
    projectId = "opt-carpet-addition"

    // Version
    if (project.mod_version.contains("alpha")) {
        versionType = "alpha"
    } else if (project.mod_version.contains("beta")) {
        versionType = "beta"
    } else {
        versionType = "release"
    }
    gameVersions = ["1.17", "1.17.1"] // Must be an array, even with only one version
    versionNumber = project.mod_version
    versionName = "v" + project.mod_version + " For Minecraft 1.17"

    // Upload
    uploadFile = remapJar

    // Loader
    loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle

    // Dependencies
    dependencies {
        required.project "fabric-api"
    }

    // ChangeLogs
    changelog = "Got full change logs in [GitHub](https://github.com/OptiJava/OptCarpetAddition/releases)."
}
